Estes scripts assumem que os .class estão na pasta ../bin.

Peer:    existe um script, peer, que inicia um peer usando um ID passado como argumento.
         De modo a respeitar a convenção do protocolo, não se deve correr mais do que
         um peer com o mesmo ID ao mesmo tempo.
       
      	 peer <peer ID>
      
TestApp: existem 5 scripts cujo objetivo é fazer um pedido a um peer.
         Existe um script para cada ação, e estes levam argumentos com base na ação:
         
         cl_backup  <IP of peer's host> <peer ID> <original file> <replication deg.>
         cl_delete  <IP of peer's host> <peer ID> <original file>
         cl_reclaim <IP of peer's host> <peer ID> <desired final size>
         cl_restore <IP of peer's host> <peer ID> <original file>
         cl_state   <IP of peer's host> <peer ID> 
         
         NOTA IMPORTANTE: assumem que o ficheiro existe e se encontra na pasta ../bin/files_original
         
Existem ainda outros scripts adicionais, tais como:
         snooper:   inicia o snooper de datagramas multicast
         reset:     apaga todos os chunks e todos os estados persistentes dos peers. Assume que os peers não estão a correr.
         start_rmi: inicia o rmiregister